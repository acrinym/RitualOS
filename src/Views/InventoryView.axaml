<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:RitualOS.ViewModels"
             xmlns:views="clr-namespace:RitualOS.Views"
             xmlns:conv="clr-namespace:RitualOS.Converters"
             x:Class="RitualOS.Views.InventoryView">
    <UserControl.DataContext>
        <vm:InventoryViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <conv:ChakraToEmojiConverter x:Key="ChakraToEmoji" />
        <conv:MessageColorConverter x:Key="MessageColorConverter" />
        <conv:LowQuantityConverter x:Key="LowQuantityConverter" />
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="TabControl">
            <Setter Property="Background" Value="#1E1B2E"/> <!-- Deep indigo -->
        </Style>
        <Style Selector="TabItem">
            <Setter Property="Background" Value="#2A1B3D"/> <!-- Moonlit indigo -->
            <Setter Property="Foreground" Value="#C0C0C0"/> <!-- Silver -->
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style Selector="TabItem:selected">
            <Setter Property="Background" Value="#4A3F5E"/> <!-- Lighter indigo for selected -->
            <Setter Property="Foreground" Value="#FFFFFF"/>
        </Style>
        <Style Selector="TextBlock">
            <Setter Property="Foreground" Value="#C0C0C0"/> <!-- Silver -->
        </Style>
        <Style Selector="Button">
            <Setter Property="Background" Value="#4A3F5E"/> <!-- Button indigo -->
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Padding" Value="8"/>
        </Style>
        <Style Selector="Button:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="#6B5B95"/> <!-- Hover glow -->
        </Style>
    </UserControl.Styles>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- Inventory Management -->
        <DockPanel Grid.Column="0" Margin="10">
            <StackPanel DockPanel.Dock="Top" Margin="10" Spacing="10">
                <TextBlock Text="Inventory Management" FontWeight="Bold" FontSize="16"/>
                <Button Content="âž• Add New Item" Command="{Binding AddItemCommand}" FontWeight="Bold"
                        AutomationProperties.Name="Add New Item Button"/>
                <TextBlock Text="{Binding Message}" Foreground="{Binding Message, Converter={StaticResource MessageColorConverter}}" Margin="10"/>
            </StackPanel>
            <ListBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}" DockPanel.Dock="Left" Width="250" Background="#2A1B3D">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="5" Spacing="2">
                            <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="12"/>
                            <TextBlock Text="{Binding Category}" FontSize="10" Opacity="0.7"/>
                            <TextBlock Text="{Binding Quantity, StringFormat='Qty: {0}'}" FontSize="10" Opacity="0.7"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Margin="10" Spacing="10">
                <TextBox Watermark="Name" Text="{Binding SelectedItem.Name, Mode=TwoWay}"
                         AutomationProperties.Name="Item Name"/>
                <ComboBox SelectedItem="{Binding SelectedItem.Category, Mode=TwoWay}">
                    <ComboBoxItem Content="Herb"/>
                    <ComboBoxItem Content="Oil"/>
                    <ComboBoxItem Content="Crystal"/>
                    <ComboBoxItem Content="Tool"/>
                </ComboBox>
                <NumericUpDown Value="{Binding SelectedItem.Quantity, Mode=TwoWay}" Minimum="0"/>
                <DatePicker SelectedDate="{Binding SelectedItem.ExpirationDate, Mode=TwoWay}"/>
                <TextBox Watermark="Storage Location" Text="{Binding SelectedItem.StorageLocation, Mode=TwoWay}"/>
                <views:ChakraSelector DataContext="{Binding SelectedItem}"/>
                <Button Content="Save" Command="{Binding SaveItemCommand}"
                        AutomationProperties.Name="Save Item Button"/>
            </StackPanel>
        </DockPanel>
        
        <!-- Inventory Alerts -->
        <StackPanel Grid.Column="1" Margin="10" Spacing="10">
            <TextBlock Text="Inventory Alerts" FontWeight="Bold" FontSize="16"/>
            <ListBox ItemsSource="{Binding Alerts}" Background="#2A1B3D">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="6">
                            <TextBlock Text="{Binding Message}"/>
                            <Button Content="Clear" Command="{Binding DataContext.ClearAlertCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}"
                                    AutomationProperties.Name="Clear Alert Button"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
    </Grid>
</UserControl>